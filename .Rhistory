result<-content(restCall,"parsed")
return(result)
}
#Object that exectures REST calls to DisGeNET module in Cytoscape
geneDisParams <- list(
source = "CURATED",
diseaseSearch = "Schizophrenia",
geneSearch = " ",
initialScoreValue = "0.0",
finalScoreValue = "1.0"
)
#Specifying parameters of the GDA network to be imported
geneDisResult <- disgenetRestCall("gene-disease-net",geneDisParams)
disgenetRestUrl<-function(netType,host="127.0.0.1",port=1234,version="v7"){
if(is.null(netType)){
print("Network type not specified.")
}else{
url<-sprintf("http://%s:%i/disgenet/%s/%s",host,port,version,netType)
}
return (url)
}
disgenetRestUrl(netType = "gene-disease-net")
#Defining object for REST to call DisGeNET automation module; defining that we will be using gene-disease associations (GDA)
disgenetRestCall<-function(netType,netParams){
url<-disgenetRestUrl(netType)
restCall<-POST(url, body = netParams, encode = "json")
result<-content(restCall,"parsed")
return(result)
}
#Object that exectures REST calls to DisGeNET module in Cytoscape
geneDisParams <- list(
source = "CURATED",
diseaseSearch = "Schizophrenia",
geneSearch = " ",
initialScoreValue = "0.0",
finalScoreValue = "1.0"
)
#Specifying parameters of the GDA network to be imported
geneDisResult <- disgenetRestCall("gene-disease-net",geneDisParams)
#Requires R 4.1.3 and Rtools 4.0
#dplyr v.1.1.2; BiocManager v. 1.30.22; rWikiPathways 1.14.0; RCy3 2.14.2
setwd("~/GitHub/SCZ-CNV")
packages <- c("dplyr","httr")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
if(!"rWikiPathways" %in% installed.packages()){
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("rWikiPathways")
}
n
if(!"RCy3" %in% installed.packages()){
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("RCy3")
}
n
#'n' is to deny BiocManager packages updadates
invisible(lapply(c("dplyr","httr","rWikiPathways","RCy3"), require, character.only = TRUE))
disgenetRestUrl<-function(netType,host="127.0.0.1",port=1234,version="v7"){
if(is.null(netType)){
print("Network type not specified.")
}else{
url<-sprintf("http://%s:%i/disgenet/%s/%s",host,port,version,netType)
}
return (url)
}
disgenetRestUrl(netType = "gene-disease-net")
#Defining object for REST to call DisGeNET automation module; defining that we will be using gene-disease associations (GDA)
disgenetRestCall<-function(netType,netParams){
url<-disgenetRestUrl(netType)
restCall<-POST(url, body = netParams, encode = "json")
result<-content(restCall,"parsed")
return(result)
}
#Object that exectures REST calls to DisGeNET module in Cytoscape
geneDisParams <- list(
source = "CURATED",
diseaseSearch = "Schizophrenia",
geneSearch = " ",
initialScoreValue = "0.0",
finalScoreValue = "1.0"
)
#Specifying parameters of the GDA network to be imported
geneDisResult <- disgenetRestCall("gene-disease-net",geneDisParams)
#Specifying parameters of the GDA network to be imported
geneDisResult <- disgenetRestCall("gene-disease-net",geneDisParams)
sessionInfo()
#Requires R 4.1.3 and Rtools 4.0
#dplyr v.1.1.2; BiocManager v. 1.30.22; rWikiPathways 1.14.0; RCy3 2.14.2
setwd("~/GitHub/SCZ-CNV")
packages <- c("dplyr","httr")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
if(!"rWikiPathways" %in% installed.packages()){
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("rWikiPathways")
}
n
if(!"RCy3" %in% installed.packages()){
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("RCy3")
}
n
#'n' is to deny BiocManager packages updadates
invisible(lapply(c("dplyr","httr","rWikiPathways","RCy3"), require, character.only = TRUE))
cytoscapePing()
cytoscapeVersionInfo()
disgenetRestUrl<-function(netType,host="127.0.0.1",port=1234,version="v7"){
if(is.null(netType)){
print("Network type not specified.")
}else{
url<-sprintf("http://%s:%i/disgenet/%s/%s",host,port,version,netType)
}
return (url)
}
disgenetRestUrl(netType = "gene-disease-net")
#Defining object for REST to call DisGeNET automation module; defining that we will be using gene-disease associations (GDA)
disgenetRestCall<-function(netType,netParams){
url<-disgenetRestUrl(netType)
restCall<-POST(url, body = netParams, encode = "json")
result<-content(restCall,"parsed")
return(result)
}
#Object that exectures REST calls to DisGeNET module in Cytoscape
geneDisParams <- list(
source = "CURATED",
diseaseSearch = "Schizophrenia",
geneSearch = " ",
initialScoreValue = "0.0",
finalScoreValue = "1.0"
)
#Specifying parameters of the GDA network to be imported
geneDisResult <- disgenetRestCall("gene-disease-net",geneDisParams)
#Object that exectures REST calls to DisGeNET module in Cytoscape
geneDisParams <- list(
source = "CURATED",
diseaseSearch = "Schizophrenia",
geneSearch = " ",
initialScoreValue = "0.7",
finalScoreValue = "1.0"
)
deleteNetwork
deleteNetwork()
#Specifying parameters of the GDA network to be imported
geneDisResult <- disgenetRestCall("gene-disease-net",geneDisParams)
#Object that exectures REST calls to DisGeNET module in Cytoscape
geneDisParams <- list(
source = "CURATED",
diseaseSearch = "Schizophrenia",
geneSearch = " ",
initialScoreValue = "0.3",
finalScoreValue = "1.0"
)
#Specifying parameters of the GDA network to be imported
geneDisResult <- disgenetRestCall("gene-disease-net",geneDisParams)
?geneDisParams
sessionInfo()
#Requires R 4.1.3 and Rtools 4.0
#dplyr v.1.1.2; BiocManager v. 1.30.22; rWikiPathways 1.14.0; RCy3 2.14.2
setwd("~/GitHub/SCZ-CNV")
packages <- c("dplyr","httr")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
if(!"rWikiPathways" %in% installed.packages()){
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("rWikiPathways")
}
n
if(!"RCy3" %in% installed.packages()){
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("RCy3")
}
n
#'n' is to deny BiocManager packages updadates
invisible(lapply(c("dplyr","httr","rWikiPathways","RCy3"), require, character.only = TRUE))
cytoscapePing()
cytoscapeVersionInfo()
getPathways<- function(j) {
pw <- findPathwaysByText(j)
pw <- pw %>%
dplyr::filter(species %in% c("Homo sapiens","Rattus norvegicus","Mus musculus"))
pw.ids <- paste0(j, "_ids")
assign(pw.ids, as.character(pw$id),envir = .GlobalEnv)
}
disgenetRestUrl<-function(netType,host="127.0.0.1",port=1234,version="v7"){
if(is.null(netType)){
print("Network type not specified.")
}else{
url<-sprintf("http://%s:%i/disgenet/%s/%s",host,port,version,netType)
}
return (url)
}
disgenetRestUrl(netType = "gene-disease-net")
#Defining object for REST to call DisGeNET automation module; defining that we will be using gene-disease associations (GDA)
disgenetRestCall<-function(netType,netParams){
url<-disgenetRestUrl(netType)
restCall<-POST(url, body = netParams, encode = "json")
result<-content(restCall,"parsed")
return(result)
}
#Object that exectures REST calls to DisGeNET module in Cytoscape
geneDisParams <- list(
source = "CURATED",
assocType = " ",
diseaseClas = " ",
diseaseSearch = "Schizophrenia",
geneSearch = " ",
initialScoreValue = "0.3",
finalScoreValue = "1.0"
)
#Specifying parameters of the GDA network to be imported
geneDisResult <- disgenetRestCall("gene-disease-net",geneDisParams)
#Specifying parameters of the GDA network to be imported
geneDisResult <- disgenetRestCall("gene-disease-net",geneDisParams)
disgenetRestUrl<-function(netType,host="127.0.0.1",port=1234,version="v7"){
if(is.null(netType)){
print("Network type not specified.")
}else{
url<-sprintf("http://%s:%i/disgenet/%s/%s",host,port,version,netType)
}
return (url)
}
disgenetRestUrl(netType = "gene-disease-net")
#Defining object for REST to call DisGeNET automation module; defining that we will be using gene-disease associations (GDA)
disgenetRestCall<-function(netType,netParams){
url<-disgenetRestUrl(netType)
restCall<-POST(url, body = netParams, encode = "json")
result<-content(restCall,"parsed")
return(result)
}
#Object that exectures REST calls to DisGeNET module in Cytoscape
geneDisParams <- list(
source = "CURATED",
assocType = " ",
diseaseClas = " ",
diseaseSearch = "Schizophrenia",
geneSearch = " ",
initialScoreValue = "0.3",
finalScoreValue = "1.0"
)
#Specifying parameters of the GDA network to be imported
geneDisResult <- disgenetRestCall("gene-disease-net",geneDisParams)
geneDisResult
geneDisResult()
#Specifying parameters of the GDA network to be imported
geneDisResult <- disgenetRestCall("gene-disease-net",geneDisParams)
#Object that exectures REST calls to DisGeNET module in Cytoscape
geneDisParams <- list(
source = "CURATED",
assocType = " ",
diseaseClass = " ",
diseaseSearch = "Schizophrenia",
geneSearch = " ",
initialScoreValue = "0.3",
finalScoreValue = "1.0"
)
#Specifying parameters of the GDA network to be imported
geneDisResult <- disgenetRestCall("gene-disease-net",geneDisParams)
#Object that exectures REST calls to DisGeNET module in Cytoscape
geneDisParams <- list(
source = "CURATED",
assocType = "",
diseaseClass = "",
diseaseSearch = "Schizophrenia",
geneSearch = " ",
initialScoreValue = "0.3",
finalScoreValue = "1.0"
)
#Specifying parameters of the GDA network to be imported
geneDisResult <- disgenetRestCall("gene-disease-net",geneDisParams)
#Object that exectures REST calls to DisGeNET module in Cytoscape
geneDisParams <- list(
source = "CURATED",
assocType = "",
diseaseClass = "",
diseaseSearch = "Schizophrenia",
geneSearch = " ",
initialScoreValue = "0.3",
finalScoreValue = "1.0"
)
#Specifying parameters of the GDA network to be imported
geneDisResult <- disgenetRestCall("gene-disease-net",geneDisParams)
#Object that exectures REST calls to DisGeNET module in Cytoscape
geneDisParams <- list(
source = "CURATED",
assocType = "Any",
diseaseClass = "Any",
diseaseSearch = "Schizophrenia",
geneSearch = " ",
initialScoreValue = "0.3",
finalScoreValue = "1.0"
)
#Specifying parameters of the GDA network to be imported
geneDisResult <- disgenetRestCall("gene-disease-net",geneDisParams)
disgenetRestUrl<-function(netType,host="127.0.0.1",port=1234,version="v7"){
if(is.null(netType)){
print("Network type not specified.")
}else{
url<-sprintf("http://%s:%i/disgenet/%s/%s",host,port,version,netType)
}
return (url)
}
disgenetRestUrl(netType = "gene-disease-net")
#Defining object for REST to call DisGeNET automation module; defining that we will be using gene-disease associations (GDA)
disgenetRestCall<-function(netType,netParams){
url<-disgenetRestUrl(netType)
restCall<-POST(url, body = netParams, encode = "json")
result<-content(restCall,"parsed")
return(result)
}
#Object that exectures REST calls to DisGeNET module in Cytoscape
geneDisParams <- list(
source = "CURATED",
assocType = "Any",
diseaseClass = "Any",
diseaseSearch = "Schizophrenia",
geneSearch = " ",
initialScoreValue = "0.3",
finalScoreValue = "1.0"
)
#Specifying parameters of the GDA network to be imported
geneDisResult <- disgenetRestCall("gene-disease-net",geneDisParams)
linkset <- file.path(getwd(),"Linksets","wikipathways-20220511-hsa-WP.xgmml")
getPathways<- function(j) {
pw <- findPathwaysByText(j)
pw <- pw %>%
dplyr::filter(species %in% c("Homo sapiens","Rattus norvegicus","Mus musculus"))
pw.ids <- paste0(j, "_ids")
assign(pw.ids, as.character(pw$id),envir = .GlobalEnv)
}
#Function to query WikiPathways using keyword and to extract WP IDs for the import function later
getPathways("Schizophrenia")
deleteAllNetworks()
getpathways.wp<- function(j) {
pw <- findPathwaysByText(j)
pw <- pw %>%
dplyr::filter(species %in% c("Homo sapiens","Rattus norvegicus","Mus musculus"))
pw.ids <- paste0(j, "_wpids")
assign(pw.ids, as.character(pw$id),envir = .GlobalEnv)
}
import <- function(i) {
commandsRun(paste0('wikipathways import-as-network id=', i))
}
disgenetRestUrl<-function(netType,host="127.0.0.1",port=1234,version="v7"){
if(is.null(netType)){
print("Network type not specified.")
}else{
url<-sprintf("http://%s:%i/disgenet/%s/%s",host,port,version,netType)
}
return (url)
}
disgenetRestUrl(netType = "gene-disease-net")
#Defining object for REST to call DisGeNET automation module; defining that we will be using gene-disease associations (GDA)
disgenetRestCall<-function(netType,netParams){
url<-disgenetRestUrl(netType)
restCall<-POST(url, body = netParams, encode = "json")
result<-content(restCall,"parsed")
return(result)
}
#Object that executes REST calls to DisGeNET module in Cytoscape
geneDisParams <- list(
source = "CURATED",
assocType = "Any",
diseaseClass = "Any",
diseaseSearch = "Schizophrenia",
geneSearch = " ",
initialScoreValue = "0.3",
finalScoreValue = "1.0"
)
#Specifying parameters of the GDA network to be imported
geneDisResult <- disgenetRestCall("gene-disease-net",geneDisParams)
layoutNetwork()
getpathways.wp("Schizophrenia")
wpids <- c("4875","5412","4222","4942","5408","5402","5346","5405","5406","5407","4940","4905","5398","5399","4906","4657","4932")
sczcnv <- sapply(wpids, function(k) paste0("WP",k))
lapply(c(Schizophrenia_wpids,sczcnv), import)
?httr
cytoscapeVersionInfo()
getNetworkList()
networklist <- getAllNetworks()
networklist <- getNetworkList()
networklist.dup <- getNetworkList()
networklist <- networklist.dup[!duplicated(networklist.dup),]
networklist.dup <- getNetworkList()
networklist <- networklist.dup[!duplicated(networklist.dup), ]
?duplicated
networklist.dup <- getNetworkList()
dupes <- duplicated(networklist.dup)
View(dupes)
dupes
networklist.dup <- getNetworkList()
dupes <- sapply(networklist.dup, "_1", sep="")
networklist.dup <- getNetworkList()
dupes <- paste(networklist.dup, "_1", sep="")
dupes
dup.filter <- function(input,suffix) {
filtered_list <- input[substr(input, nchar(input) - 1,nchar(input))==suffix]
}
networklist.dup <- getNetworkList()
dup.filter <- function(input,suffix) {
filtered_list <- input[substr(input, nchar(input) - 1,nchar(input))==suffix]
}
dup.filter(networklist.dup,"_1")
duplicates <- dup.filter(networklist.dup,"_1")
View(duplicates)
?setCurrentNetwork
lapply(duplicates,delete.dupes)
#Getting duplicate networks (Cytoscape marks duplicate networks with a "_1" suffix to the network name)
delete.dupes <- function(nw) {
setCurrentNetwork(nw)
deleteNetwork()
}
lapply(duplicates,delete.dupes)
deleteAllNetworks()
sessionInfo()
#Requires R 4.1.3 and Rtools 4.0
#dplyr 1.1.2; httr 1.4.7; BiocManager 1.30.22; rWikiPathways 1.14.0; RCy3 2.14.2
setwd("~/GitHub/SCZ-CNV")
packages <- c("dplyr","httr")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
if(!"rWikiPathways" %in% installed.packages()){
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("rWikiPathways")
}
if(!"RCy3" %in% installed.packages()){
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("RCy3")
}
n
#'n' is to deny BiocManager packages updadates
invisible(lapply(c("dplyr","httr","rWikiPathways","RCy3"), require, character.only = TRUE))
cytoscapePing()
cytoscapeVersionInfo()
getpathways.wp<- function(j) {
pw <- findPathwaysByText(j)
pw <- pw %>%
dplyr::filter(species %in% c("Homo sapiens","Rattus norvegicus","Mus musculus"))
pw.ids <- paste0(j, "_wpids")
assign(pw.ids, as.character(pw$id),envir = .GlobalEnv)
}
import <- function(i) {
commandsRun(paste0('wikipathways import-as-network id=', i))
}
disgenetRestUrl<-function(netType,host="127.0.0.1",port=1234,version="v7"){
if(is.null(netType)){
print("Network type not specified.")
}else{
url<-sprintf("http://%s:%i/disgenet/%s/%s",host,port,version,netType)
}
return (url)
}
disgenetRestUrl(netType = "gene-disease-net")
#Defining object for REST to call DisGeNET automation module; defining that we will be using gene-disease associations (GDA)
disgenetRestCall<-function(netType,netParams){
url<-disgenetRestUrl(netType)
restCall<-POST(url, body = netParams, encode = "json")
result<-content(restCall,"parsed")
return(result)
}
#Object that executes REST calls to DisGeNET module in Cytoscape
geneDisParams <- list(
source = "CURATED",
assocType = "Any",
diseaseClass = "Any",
diseaseSearch = "Schizophrenia",
geneSearch = " ",
initialScoreValue = "0.3",
finalScoreValue = "1.0"
)
#Specifying parameters of the GDA network to be imported
geneDisResult <- disgenetRestCall("gene-disease-net",geneDisParams)
getpathways.wp("Schizophrenia")
wpids <- c("4875","5412","4222","4942","5408","5402","5346","5405","5406","5407","4940","4905","5398","5399","4906","4657","4932")
sczcnv <- sapply(wpids, function(k) paste0("WP",k))
lapply(c(Schizophrenia_wpids,sczcnv), import)
networklist.dup <- getNetworkList()
dup.filter <- function(input,suffix) {
filtered_list <- input[substr(input, nchar(input) - 1,nchar(input))==suffix]
}
duplicates <- dup.filter(networklist.dup,"_1")
#Getting duplicate networks (Cytoscape marks duplicate networks with a "_1" suffix to the network name)
delete.dupes <- function(nw) {
setCurrentNetwork(nw)
deleteNetwork()
}
lapply(duplicates,delete.dupes)
#Selecting and deleting duplicate networks
networklist <- getNetworkList()
networklist <- getNetworkList()
merge <- function(n1,n2) {
mergeNetworks(c(n1,n2),(paste(n1,n2,sep = " - ")),"merge")
}
mergeresult <- networklist[1]
for (i in 2:length(networklist)) {
mergeresult <- merge(mergeresult,networklist[i])
}
