keaoppairs <- merge(keaoppairs,aopmap,by="AOPid",all.x=FALSE)
#Mapping AOPids to AOPtitles using mapping file
keaoppairs <- keaoppairs[,c("KEid","AOPid","AOPtitle")]
write.table(keaoppairs,file=paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input))))),sep="\t",quote=FALSE,row.names=FALSE)
commandsRun(sprintf('network import file columnTypeList=s,t,ta delimiters=\\t file=%s firstRowAsColumnNames=true rootNetworkList= --Create new network collection -- startLoadRow=1',paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input)))))))
renameNetwork(sprintf("Top quarter key events - AOPs%s",sub("top","",deparse(substitue(input)))))
}
getkeaoppairs(top_selected)
getkeaoppairs <- function(input) {
keaoppairs <- keensgpairs[keensgpairs$KEid %in% input$KEid,c("KEid","AOPid")]
#For top quarter KEs, get which AOPs these are taken from from result of initial AOP-Wiki query
keaoppairs <- separate_rows(keaoppairs,AOPid,sep="; ")
sparqlquery("AOP-Wiki","aopmap.txt","aopmap")
#Running query to get AOPid-title mappings
for (i in 1:ncol(aopmap)) {
for (j in 1:nrow(aopmap)) {
aopmap[j, i] <- gsub('"', '', aopmap[j, i])
}
}
#Removing quotation marks from df
keaoppairs <- merge(keaoppairs,aopmap,by="AOPid",all.x=FALSE)
#Mapping AOPids to AOPtitles using mapping file
keaoppairs <- keaoppairs[,c("KEid","AOPid","AOPtitle")]
write.table(keaoppairs,file=paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input))))),sep="\t",quote=FALSE,row.names=FALSE)
commandsRun(sprintf('network import file columnTypeList=s,t,ta delimiters=\\t file=%s firstRowAsColumnNames=true rootNetworkList= -- Create new network collection -- startLoadRow=1',paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input)))))))
renameNetwork(sprintf("Top quarter key events - AOPs%s",sub("top","",deparse(substitue(input)))))
}
getkeaoppairs(top_selected)
getkeaoppairs <- function(input) {
keaoppairs <- keensgpairs[keensgpairs$KEid %in% input$KEid,c("KEid","AOPid")]
#For top quarter KEs, get which AOPs these are taken from from result of initial AOP-Wiki query
keaoppairs <- separate_rows(keaoppairs,AOPid,sep="; ")
sparqlquery("AOP-Wiki","aopmap.txt","aopmap")
#Running query to get AOPid-title mappings
for (i in 1:ncol(aopmap)) {
for (j in 1:nrow(aopmap)) {
aopmap[j, i] <- gsub('"', '', aopmap[j, i])
}
}
#Removing quotation marks from df
keaoppairs <- merge(keaoppairs,aopmap,by="AOPid",all.x=FALSE)
#Mapping AOPids to AOPtitles using mapping file
keaoppairs <- keaoppairs[,c("KEid","AOPid","AOPtitle")]
write.table(keaoppairs,file=paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input))))),sep="\t",quote=FALSE,row.names=FALSE)
commandsRun(sprintf('network import file columnTypeList=s,t,ta delimiters=\\t file=%s firstRowAsColumnNames=true rootNetworkList= -- Create new network collection -- startLoadRow=1',paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input)))))))
renameNetwork(sprintf("Top quarter key events - AOPs%s",sub("top","",deparse(substitute(input)))))
}
getkeaoppairs(top_selected)
getkeaoppairs <- function(input) {
keaoppairs <- keensgpairs[keensgpairs$KEid %in% input$KEid,c("KEid","AOPid")]
#For top quarter KEs, get which AOPs these are taken from from result of initial AOP-Wiki query
keaoppairs <- separate_rows(keaoppairs,AOPid,sep="; ")
sparqlquery("AOP-Wiki","aopmap.txt","aopmap")
#Running query to get AOPid-title mappings
for (i in 1:ncol(aopmap)) {
for (j in 1:nrow(aopmap)) {
aopmap[j, i] <- gsub('"', '', aopmap[j, i])
}
}
#Removing quotation marks from df
keaoppairs <- merge(keaoppairs,aopmap,by="AOPid",all.x=FALSE)
#Mapping AOPids to AOPtitles using mapping file
keaoppairs <- keaoppairs[,c("KEid","AOPid","AOPtitle")]
write.table(keaoppairs,file=paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input))))),sep="\t",quote=FALSE,row.names=FALSE)
commandsRun(sprintf('network import file columnTypeList=s,t,ta delimiters=\\t file=%s firstRowAsColumnNames=true rootNetworkList= -- Create new network collection -- startLoadRow=1',paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input)))))))
Sys.sleep(0.5)
renameNetwork(sprintf("Top quarter key events - AOPs%s",sub("top","",deparse(substitute(input)))))
}
getkeaoppairs(top_selected)
getkeaoppairs <- function(input) {
keaoppairs <- keensgpairs[keensgpairs$KEid %in% input$KEid,c("KEid","AOPid")]
#For top quarter KEs, get which AOPs these are taken from from result of initial AOP-Wiki query
keaoppairs <- separate_rows(keaoppairs,AOPid,sep="; ")
sparqlquery("AOP-Wiki","aopmap.txt","aopmap")
#Running query to get AOPid-title mappings
for (i in 1:ncol(aopmap)) {
for (j in 1:nrow(aopmap)) {
aopmap[j, i] <- gsub('"', '', aopmap[j, i])
}
}
#Removing quotation marks from df
keaoppairs <- merge(keaoppairs,aopmap,by="AOPid",all.x=FALSE)
#Mapping AOPids to AOPtitles using mapping file
keaoppairs <- keaoppairs[,c("KEid","AOPid","AOPtitle")]
write.table(keaoppairs,file=paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input))))),sep="\t",quote=FALSE,row.names=FALSE)
commandsRun(sprintf('network import file columnTypeList=s,t,ta delimiters=\\t file=%s firstRowAsColumnNames=true rootNetworkList= -- Create new network collection -- startLoadRow=1',paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input)))))))
Sys.sleep(0.5)
renameNetwork(sprintf("Top quarter key events - AOPs%s",sub("top","",deparse(substitute(input)))))
}
getkeaoppairs(top_selected)
getkeaoppairs <- function(input) {
keaoppairs <- keensgpairs[keensgpairs$KEid %in% input$KEid,c("KEid","AOPid","KEtitle")]
#For top quarter KEs, get which AOPs these are taken from from result of initial AOP-Wiki query
keaoppairs <- separate_rows(keaoppairs,AOPid,sep="; ")
sparqlquery("AOP-Wiki","aopmap.txt","aopmap")
#Running query to get AOPid-title mappings
for (i in 1:ncol(aopmap)) {
for (j in 1:nrow(aopmap)) {
aopmap[j, i] <- gsub('"', '', aopmap[j, i])
}
}
#Removing quotation marks from df
keaoppairs <- merge(keaoppairs,aopmap,by="AOPid",all.x=FALSE)
#Mapping AOPids to AOPtitles using mapping file
keaoppairs <- keaoppairs[,c("KEid","KEtitle","AOPid","AOPtitle")]
#Reordering columns
write.table(keaoppairs,file=paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input))))),sep="\t",quote=FALSE,row.names=FALSE)
commandsRun(sprintf('network import file columnTypeList=s,sa,t,ta delimiters=\\t file=%s firstRowAsColumnNames=true rootNetworkList= -- Create new network collection -- startLoadRow=1',paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input)))))))
Sys.sleep(0.5)
renameNetwork(sprintf("Top quarter key events - AOPs%s",sub("top","",deparse(substitute(input)))))
}
getkeaoppairs(top_selected)
getkeaoppairs <- function(input) {
keaoppairs <- keensgpairs[keensgpairs$KEid %in% input$KEid,c("KEid","AOPid")]
#For top quarter KEs, get which AOPs these are taken from from result of initial AOP-Wiki query
keaoppairs <- separate_rows(keaoppairs,AOPid,sep="; ")
sparqlquery("AOP-Wiki","aopmap.txt","aopmap")
#Running query to get AOPid-title mappings
for (i in 1:ncol(aopmap)) {
for (j in 1:nrow(aopmap)) {
aopmap[j, i] <- gsub('"', '', aopmap[j, i])
}
}
#Removing quotation marks from df
keaoppairs <- merge(keaoppairs,aopmap,by="AOPid",all.x=FALSE)
#Mapping AOPids to AOPtitles using mapping file
names(keaoppairs) <- c("KEid_source","AOPid_target")
keaoppairs$KEid <- keaoppairs$KEid_source
keaoppairs$AOPid <- keaoppairs$AOPid_target
keaoppairs <- keaoppairs[,c("KEid_source","KEid","AOPid_source","AOPid","AOPtitle")]
#Reordering columns
write.table(keaoppairs,file=paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input))))),sep="\t",quote=FALSE,row.names=FALSE)
commandsRun(sprintf('network import file columnTypeList=s,sa,t,ta,ta delimiters=\\t file=%s firstRowAsColumnNames=true rootNetworkList= -- Create new network collection -- startLoadRow=1',paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input)))))))
Sys.sleep(0.5)
renameNetwork(sprintf("Top quarter key events - AOPs%s",sub("top","",deparse(substitute(input)))))
}
getkeaoppairs(top_selected)
getkeaoppairs <- function(input) {
keaoppairs <- keensgpairs[keensgpairs$KEid %in% input$KEid,c("KEid","AOPid")]
#For top quarter KEs, get which AOPs these are taken from from result of initial AOP-Wiki query
keaoppairs <- separate_rows(keaoppairs,AOPid,sep="; ")
sparqlquery("AOP-Wiki","aopmap.txt","aopmap")
#Running query to get AOPid-title mappings
for (i in 1:ncol(aopmap)) {
for (j in 1:nrow(aopmap)) {
aopmap[j, i] <- gsub('"', '', aopmap[j, i])
}
}
#Removing quotation marks from df
keaoppairs <- merge(keaoppairs,aopmap,by="AOPid",all.x=FALSE)
#Mapping AOPids to AOPtitles using mapping file
names(keaoppairs) <- c("KEid_source","AOPid_target","AOPtitle")
keaoppairs$KEid <- keaoppairs$KEid_source
keaoppairs$AOPid <- keaoppairs$AOPid_target
keaoppairs <- keaoppairs[,c("KEid_source","KEid","AOPid_source","AOPid","AOPtitle")]
#Reordering columns
write.table(keaoppairs,file=paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input))))),sep="\t",quote=FALSE,row.names=FALSE)
commandsRun(sprintf('network import file columnTypeList=s,sa,t,ta,ta delimiters=\\t file=%s firstRowAsColumnNames=true rootNetworkList= -- Create new network collection -- startLoadRow=1',paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input)))))))
Sys.sleep(0.5)
renameNetwork(sprintf("Top quarter key events - AOPs%s",sub("top","",deparse(substitute(input)))))
}
getkeaoppairs(top_selected)
keaoppairs <- keensgpairs[keensgpairs$KEid %in% top_selected$KEid,c("KEid","AOPid")]
#For top quarter KEs, get which AOPs these are taken from from result of initial AOP-Wiki query
keaoppairs <- separate_rows(keaoppairs,AOPid,sep="; ")
sparqlquery("AOP-Wiki","aopmap.txt","aopmap")
#Running query to get AOPid-title mappings
for (i in 1:ncol(aopmap)) {
for (j in 1:nrow(aopmap)) {
aopmap[j, i] <- gsub('"', '', aopmap[j, i])
}
}
#Removing quotation marks from df
keaoppairs <- merge(keaoppairs,aopmap,by="AOPid",all.x=FALSE)
#Mapping AOPids to AOPtitles using mapping file
names(keaoppairs) <- c("KEid_source","AOPid_target","AOPtitle")
keaoppairs$KEid <- keaoppairs$KEid_source
keaoppairs$AOPid <- keaoppairs$AOPid_target
keaoppairs <- keaoppairs[,c("KEid_source","KEid","AOPid_source","AOPid","AOPtitle")]
View(keaoppairs)
getkeaoppairs <- function(input) {
keaoppairs <- keensgpairs[keensgpairs$KEid %in% input$KEid,c("KEid","AOPid")]
#For top quarter KEs, get which AOPs these are taken from from result of initial AOP-Wiki query
keaoppairs <- separate_rows(keaoppairs,AOPid,sep="; ")
sparqlquery("AOP-Wiki","aopmap.txt","aopmap")
#Running query to get AOPid-title mappings
for (i in 1:ncol(aopmap)) {
for (j in 1:nrow(aopmap)) {
aopmap[j, i] <- gsub('"', '', aopmap[j, i])
}
}
#Removing quotation marks from df
keaoppairs <- merge(keaoppairs,aopmap,by="AOPid",all.x=FALSE)
#Mapping AOPids to AOPtitles using mapping file
names(keaoppairs) <- c("KEid_source","AOPid_target","AOPtitle")
keaoppairs$KEid <- keaoppairs$KEid_source
keaoppairs$AOPid <- keaoppairs$AOPid_target
keaoppairs <- keaoppairs[,c("KEid_source","KEid","AOPid_target","AOPid","AOPtitle")]
#Reordering columns
write.table(keaoppairs,file=paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input))))),sep="\t",quote=FALSE,row.names=FALSE)
commandsRun(sprintf('network import file columnTypeList=s,sa,t,ta,ta delimiters=\\t file=%s firstRowAsColumnNames=true rootNetworkList= -- Create new network collection -- startLoadRow=1',paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input)))))))
Sys.sleep(0.5)
renameNetwork(sprintf("Top quarter key events - AOPs%s",sub("top","",deparse(substitute(input)))))
}
getkeaoppairs(top_selected)
getkeaoppairs(top_all)
rm(keaoppairs)
getkeaoppairs <- function(input) {
keaoppairs <- keensgpairs[keensgpairs$KEid %in% input$KEid,c("KEid","AOPid")]
#For top quarter KEs, get which AOPs these are taken from from result of initial AOP-Wiki query
keaoppairs <- separate_rows(keaoppairs,AOPid,sep="; ")
sparqlquery("AOP-Wiki","aopmap.txt","aopmap")
#Running query to get AOPid-title mappings
for (i in 1:ncol(aopmap)) {
for (j in 1:nrow(aopmap)) {
aopmap[j, i] <- gsub('"', '', aopmap[j, i])
}
}
#Removing quotation marks from df
keaoppairs <- merge(keaoppairs,aopmap,by="AOPid",all.x=FALSE)
#Mapping AOPids to AOPtitles using mapping file
names(keaoppairs) <- c("KEid_source","AOPid_target","AOPtitle")
keaoppairs$KEid <- keaoppairs$KEid_source
keaoppairs$AOPid <- keaoppairs$AOPid_target
keaoppairs <- keaoppairs[,c("KEid_source","KEid","AOPid_target","AOPid","AOPtitle")]
#Reordering columns
write.table(keaoppairs,file=paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input))))),sep="\t",quote=FALSE,row.names=FALSE)
commandsRun(sprintf('network import file columnTypeList=s,sa,t,ta,ta delimiters=\\t file=%s firstRowAsColumnNames=true rootNetworkList= -- Create new network collection -- startLoadRow=1',paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input)))))))
Sys.sleep(0.5)
renameNetwork(sprintf("Top quarter key events - AOPs%s",sub("top","",deparse(substitute(input)))))
}
getkeaoppairs(top_selected)
getkeaoppairs(top_all)
getkeaoppairs <- function(input) {
keaoppairs <- keensgpairs[keensgpairs$KEid %in% input$KEid,c("KEid","AOPid")]
#For top quarter KEs, get which AOPs these are taken from from result of initial AOP-Wiki query
keaoppairs <- separate_rows(keaoppairs,AOPid,sep="; ")
sparqlquery("AOP-Wiki","aopmap.txt","aopmap")
#Running query to get AOPid-title mappings
for (i in 1:ncol(aopmap)) {
for (j in 1:nrow(aopmap)) {
aopmap[j, i] <- gsub('"', '', aopmap[j, i])
}
}
#Removing quotation marks from df
keaoppairs <- merge(keaoppairs,aopmap,by="AOPid",all.x=FALSE)
#Mapping AOPids to AOPtitles using mapping file
names(keaoppairs) <- c("KEid_source","AOPid_target","AOPtitle")
keaoppairs$KEid <- keaoppairs$KEid_source
keaoppairs$AOPid <- keaoppairs$AOPid_target
keaoppairs <- keaoppairs[,c("KEid_source","KEid","AOPid_target","AOPid","AOPtitle")]
#Reordering columns
return(keaoppairs)
write.table(keaoppairs,file=paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input))))),sep="\t",quote=FALSE,row.names=FALSE)
commandsRun(sprintf('network import file columnTypeList=s,sa,t,ta,ta delimiters=\\t file=%s firstRowAsColumnNames=true rootNetworkList= -- Create new network collection -- startLoadRow=1',paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input)))))))
Sys.sleep(0.5)
renameNetwork(sprintf("Top quarter key events - AOPs%s",sub("top","",deparse(substitute(input)))))
}
getkeaoppairs(top_selected)
getkeaoppairs <- function(input) {
keaoppairs <- keensgpairs[keensgpairs$KEid %in% input$KEid,c("KEid","AOPid")]
#For top quarter KEs, get which AOPs these are taken from from result of initial AOP-Wiki query
keaoppairs <- separate_rows(keaoppairs,AOPid,sep="; ")
sparqlquery("AOP-Wiki","aopmap.txt","aopmap")
#Running query to get AOPid-title mappings
for (i in 1:ncol(aopmap)) {
for (j in 1:nrow(aopmap)) {
aopmap[j, i] <- gsub('"', '', aopmap[j, i])
}
}
#Removing quotation marks from df
keaoppairs <- merge(keaoppairs,aopmap,by="AOPid",all.x=FALSE)
#Mapping AOPids to AOPtitles using mapping file
names(keaoppairs) <- c("KEid_source","AOPid_target","AOPtitle")
keaoppairs$KEid <- keaoppairs$KEid_source
keaoppairs$AOPid <- keaoppairs$AOPid_target
keaoppairs <- keaoppairs[,c("KEid_source","KEid","AOPid_target","AOPid","AOPtitle")]
#Reordering columns
paste0(keaoppairs,sub("top","",deparse(substitute(input)))) <- get(keaoppairs)
write.table(keaoppairs,file=paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input))))),sep="\t",quote=FALSE,row.names=FALSE)
commandsRun(sprintf('network import file columnTypeList=s,sa,t,ta,ta delimiters=\\t file=%s firstRowAsColumnNames=true rootNetworkList= -- Create new network collection -- startLoadRow=1',paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input)))))))
Sys.sleep(0.5)
renameNetwork(sprintf("Top quarter key events - AOPs%s",sub("top","",deparse(substitute(input)))))
}
getkeaoppairs(top_selected)
getkeaoppairs <- function(input) {
keaoppairs <- keensgpairs[keensgpairs$KEid %in% input$KEid,c("KEid","AOPid")]
#For top quarter KEs, get which AOPs these are taken from from result of initial AOP-Wiki query
keaoppairs <- separate_rows(keaoppairs,AOPid,sep="; ")
sparqlquery("AOP-Wiki","aopmap.txt","aopmap")
#Running query to get AOPid-title mappings
for (i in 1:ncol(aopmap)) {
for (j in 1:nrow(aopmap)) {
aopmap[j, i] <- gsub('"', '', aopmap[j, i])
}
}
#Removing quotation marks from df
keaoppairs <- merge(keaoppairs,aopmap,by="AOPid",all.x=FALSE)
#Mapping AOPids to AOPtitles using mapping file
names(keaoppairs) <- c("KEid_source","AOPid_target","AOPtitle")
keaoppairs$KEid <- keaoppairs$KEid_source
keaoppairs$AOPid <- keaoppairs$AOPid_target
keaoppairs <- keaoppairs[,c("KEid_source","KEid","AOPid_target","AOPid","AOPtitle")]
#Reordering columns
assign(paste0(keaoppairs,"",sub("top","",deparse(substitute(input)))), get(keaoppairs), envir = .GlobalEnv)
write.table(keaoppairs,file=paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input))))),sep="\t",quote=FALSE,row.names=FALSE)
commandsRun(sprintf('network import file columnTypeList=s,sa,t,ta,ta delimiters=\\t file=%s firstRowAsColumnNames=true rootNetworkList= -- Create new network collection -- startLoadRow=1',paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input)))))))
Sys.sleep(0.5)
renameNetwork(sprintf("Top quarter key events - AOPs%s",sub("top","",deparse(substitute(input)))))
}
getkeaoppairs(top_selected)
keaoppairs <- keensgpairs[keensgpairs$KEid %in% top_selected$KEid,"AOPid"]
View(keaoppairs)
keaoppairs <- separate_rows(keaoppairs,AOPid,sep="; ")
View(keaoppairs)
getkeaoppairs <- function(input) {
keaoppairs <- keensgpairs[keensgpairs$KEid %in% input$KEid,c("KEid","AOPid")]
#For top quarter KEs, get which AOPs these are taken from from result of initial AOP-Wiki query
keaoppairs <- separate_rows(keaoppairs,AOPid,sep="; ")
sparqlquery("AOP-Wiki","aopmap.txt","aopmap")
#Running query to get AOPid-title mappings
for (i in 1:ncol(aopmap)) {
for (j in 1:nrow(aopmap)) {
aopmap[j, i] <- gsub('"', '', aopmap[j, i])
}
}
#Removing quotation marks from df
keaoppairs <- merge(keaoppairs,aopmap,by="AOPid",all.x=FALSE)
#Mapping AOPids to AOPtitles using mapping file
names(keaoppairs) <- c("KEid_source","AOPid_target","AOPtitle")
keaoppairs$KEid <- keaoppairs$KEid_source
keaoppairs$AOPid <- keaoppairs$AOPid_target
keaoppairs <- keaoppairs[,c("KEid_source","KEid","AOPid_target","AOPid","AOPtitle")]
#Reordering columns
write.table(keaoppairs,file=paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input))))),sep="\t",quote=FALSE,row.names=FALSE)
commandsRun(sprintf('network import file columnTypeList=s,sa,t,ta,ta delimiters=\\t file=%s firstRowAsColumnNames=true rootNetworkList= -- Create new network collection -- startLoadRow=1',paste0(other_savepath,sprintf("/keaoppairs%s.tsv",sub("top","",deparse(substitute(input)))))))
Sys.sleep(0.5)
renameNetwork(sprintf("Top quarter key events - AOPs%s",sub("top","",deparse(substitute(input)))))
}
getkeaoppairs(top_selected)
getkeaoppairs(top_all)
keaoppairs <- unique(separate_rows(keaoppairs,AOPid,sep="; "))
View(keaoppairs)
View(keaoppairs)
#For top quarter KEs, get which unique AOPs these are taken from
sparqlquery("AOP-Wiki","aopao.txt","aopao")
View(aopao)
#For top quarter KEs, get which unique AOPs these are taken from
sparqlquery("AOP-Wiki","aopao.txt","aopao")
#For top quarter KEs, get which unique AOPs these are taken from
sparqlquery("AOP-Wiki","aopao.txt","aopao")
keaoppairs <- keensgpairs[keensgpairs$KEid %in% top_selected$KEid,"AOPid"]
keaoppairs <- unique(separate_rows(keaoppairs,AOPid,sep="; "))
View(aopao)
#Getting full list of which AOs are associated to which AOPs
aopao <- aopao[aopao$AOPid %in% keaoppairs$AOPid,]
View(aopao)
unique(aopao)
#Filtering AOP-AO list by AOPs associated with top quarter KEs
sparqlquery("AOP-Wiki","aopmap.txt","aopmap")
#Running query to get AOPid-title mappings
for (i in 1:ncol(aopmap)) {
for (j in 1:nrow(aopmap)) {
aopmap[j, i] <- gsub('"', '', aopmap[j, i])
}
}
#Removing quotation marks from df
aopao <- merge(aopao,aopmap,by="AOPid",all.x=FALSE)
View(aopao)
#Mapping AOPids to AOPtitles using mapping file
sparqlquery("AOP-Wiki","aomap.txt","aomap")
View(aomap)
for (i in 1:ncol(aomap)) {
for (j in 1:nrow(aomap)) {
aomap[j, i] <- gsub('"', '', aomap[j, i])
}
}
View(aomap)
#Removing quotation marks from df
aopao <- merge(aopao,aomap,by="AOid",all.x=FALSE)
View(aopao)
#Mapping AOids to AOtitles using mapping file
names(aopao) <- c("AOid_target","AOPid_source","AOPtitle","AOtitle")
View(aopao)
aopao$AOid <- AOid_target
aopao$AOid <- aopao$AOid_target
aopao$AOPid <- aopao$AOPid_source
View(aopao)
aopao <- aopao[,c("AOid_target","AOPid_source","AOid","AOtitle","AOPid","AOPtitle")]
View(aopao)
keaoppairs <- keensgpairs[keensgpairs$KEid %in% top_selected$KEid,"AOPid"]
keaoppairs <- unique(separate_rows(keaoppairs,AOPid,sep="; "))
#For top quarter KEs, get which unique AOPs these are taken from
sparqlquery("AOP-Wiki","aopao.txt","aopao")
#Getting full list of which AOs are associated to which AOPs
aopaopairs <- aopao[aopao$AOPid %in% keaoppairs$AOPid,]
#Filtering AOP-AO list by AOPs associated with top quarter KEs
sparqlquery("AOP-Wiki","aopmap.txt","aopmap")
#Running query to get AOPid-title mappings
for (i in 1:ncol(aopmap)) {
for (j in 1:nrow(aopmap)) {
aopmap[j, i] <- gsub('"', '', aopmap[j, i])
}
}
#Removing quotation marks from df
aopaopairs <- merge(aopaopairs,aopmap,by="AOPid",all.x=FALSE)
#Mapping AOPids to AOPtitles using mapping file
sparqlquery("AOP-Wiki","aomap.txt","aomap")
for (i in 1:ncol(aomap)) {
for (j in 1:nrow(aomap)) {
aomap[j, i] <- gsub('"', '', aomap[j, i])
}
}
#Removing quotation marks from df
aopaopairs <- merge(aopaopairs,aomap,by="AOid",all.x=FALSE)
#Mapping AOids to AOtitles using mapping file
names(aopaopairs) <- c("AOid_target","AOPid_source","AOPtitle","AOtitle")
aopaopairs$AOid <- aopaopairs$AOid_target
aopaopairs$AOPid <- aopaopairs$AOPid_source
aopaopairs <- aopaopairs[,c("AOid_target","AOPid_source","AOid","AOtitle","AOPid","AOPtitle")]
View(aopaopairs)
View(aopaopairs)
getaopaopairs <- function(input) {
keaoppairs <- keensgpairs[keensgpairs$KEid %in% input$KEid,"AOPid"]
keaoppairs <- unique(separate_rows(keaoppairs,AOPid,sep="; "))
#For top quarter KEs, get which unique AOPs these are taken from
sparqlquery("AOP-Wiki","aopao.txt","aopao")
#Getting full list of which AOs are associated to which AOPs
aopaopairs <- aopao[aopao$AOPid %in% keaoppairs$AOPid,]
#Filtering AOP-AO list by AOPs associated with top quarter KEs
sparqlquery("AOP-Wiki","aopmap.txt","aopmap")
#Running query to get AOPid-title mappings
for (i in 1:ncol(aopmap)) {
for (j in 1:nrow(aopmap)) {
aopmap[j, i] <- gsub('"', '', aopmap[j, i])
}
}
#Removing quotation marks from df
aopaopairs <- merge(aopaopairs,aopmap,by="AOPid",all.x=FALSE)
#Mapping AOPids to AOPtitles using mapping file
sparqlquery("AOP-Wiki","aomap.txt","aomap")
for (i in 1:ncol(aomap)) {
for (j in 1:nrow(aomap)) {
aomap[j, i] <- gsub('"', '', aomap[j, i])
}
}
#Removing quotation marks from df
aopaopairs <- merge(aopaopairs,aomap,by="AOid",all.x=FALSE)
#Mapping AOids to AOtitles using mapping file
names(aopaopairs) <- c("AOid_target","AOPid_source","AOPtitle","AOtitle")
aopaopairs$AOid <- aopaopairs$AOid_target
aopaopairs$AOPid <- aopaopairs$AOPid_source
aopaopairs <- aopaopairs[,c("AOid_target","AOPid_source","AOid","AOtitle","AOPid","AOPtitle")]
#Reordering columns
write.table(aopaopairs,file=paste0(other_savepath,sprintf("/aopaopairs%s.tsv",sub("top","",deparse(substitute(input))))),sep="\t",quote=FALSE,row.names=FALSE)
commandsRun(sprintf('network import file columnTypeList=t,s,ta,ta,sa,sa delimiters=\\t file=%s firstRowAsColumnNames=true rootNetworkList= -- Create new network collection -- startLoadRow=1',paste0(other_savepath,sprintf("/aopaopairs%s.tsv",sub("top","",deparse(substitute(input)))))))
}
getaopaopairs(top_selected)
getaoaopairs(top_all)
getaopaopairs(top_all)
getaopaopairs <- function(input) {
keaoppairs <- keensgpairs[keensgpairs$KEid %in% input$KEid,"AOPid"]
keaoppairs <- unique(separate_rows(keaoppairs,AOPid,sep="; "))
#For top quarter KEs, get which unique AOPs these are taken from
sparqlquery("AOP-Wiki","aopao.txt","aopao")
#Getting full list of which AOs are associated to which AOPs
aopaopairs <- aopao[aopao$AOPid %in% keaoppairs$AOPid,]
#Filtering AOP-AO list by AOPs associated with top quarter KEs
sparqlquery("AOP-Wiki","aopmap.txt","aopmap")
#Running query to get AOPid-title mappings
for (i in 1:ncol(aopmap)) {
for (j in 1:nrow(aopmap)) {
aopmap[j, i] <- gsub('"', '', aopmap[j, i])
}
}
#Removing quotation marks from df
aopaopairs <- merge(aopaopairs,aopmap,by="AOPid",all.x=FALSE)
#Mapping AOPids to AOPtitles using mapping file
sparqlquery("AOP-Wiki","aomap.txt","aomap")
for (i in 1:ncol(aomap)) {
for (j in 1:nrow(aomap)) {
aomap[j, i] <- gsub('"', '', aomap[j, i])
}
}
#Removing quotation marks from df
aopaopairs <- merge(aopaopairs,aomap,by="AOid",all.x=FALSE)
#Mapping AOids to AOtitles using mapping file
names(aopaopairs) <- c("AOid_target","AOPid_source","AOPtitle","AOtitle")
aopaopairs$AOid <- aopaopairs$AOid_target
aopaopairs$AOPid <- aopaopairs$AOPid_source
aopaopairs <- aopaopairs[,c("AOid_target","AOPid_source","AOid","AOtitle","AOPid","AOPtitle")]
#Reordering columns
write.table(aopaopairs,file=paste0(other_savepath,sprintf("/aopaopairs%s.tsv",sub("top","",deparse(substitute(input))))),sep="\t",quote=FALSE,row.names=FALSE)
commandsRun(sprintf('network import file columnTypeList=t,s,ta,ta,sa,sa delimiters=\\t file=%s firstRowAsColumnNames=true rootNetworkList= -- Create new network collection -- startLoadRow=1',paste0(other_savepath,sprintf("/aopaopairs%s.tsv",sub("top","",deparse(substitute(input)))))))
Sys.sleep(0.5)
renameNetwork(sprintf("AOP-AO pairs for top AOPs in top quarter KEs%s",sub("top","",deparse(substitute(input)))))
}
getaopaopairs(top_selected)
getaopaopairs(top_all)
?altmergeNetworks
altmergeNetworks(sources=c("AOP-AO pairs for top AOPs in top quarter KEs_selected","Top quarter key events - AOPs_selected"),
title="KE-AOP-AO pairs for top quarter KEs_selected",
operation="union",
nodeKeys="AOPid","AOPid")
altmergeNetworks(sources=c("AOP-AO pairs for top AOPs in top quarter KEs_selected","Top quarter key events - AOPs_selected"),
title="KE-AOP-AO pairs for top quarter KEs_selected",
operation="union",
nodeKeys="AOPid","AOPid")
altmergeNetworks(sources=c("AOP-AO pairs for top AOPs in top quarter KEs_selected","Top quarter key events - AOPs_selected"),
title="KE-AOP-AO pairs for top quarter KEs_selected",
operation="union",
nodeKeys="AOPid","AOPid")
