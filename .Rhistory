#Installing packages
library(RCy3)
library(rWikiPathways)
#Opening libraries that this script depends on
setwd("~/GitHub/SCZ-CNV")
cytoscapePing()
cytoscapeVersionInfo()
scz_pathways <- findPathwaysByText("Schizophrenia")
#In case the query needs to be specified further
scz_pathways.ids <- scz_pathways$id
#Selecting the WP IDs of the relevant pathways (all in this case)
import <- function(i) {commandsRun(paste0('wikipathways import-as-network id=', i))
}
lapply(scz_pathways.ids,import)
scz_pathways.ids
deleteAllNetworks
deleteAllNetworks()
?lapply
#Selecting the WP IDs of the relevant pathways (all in this case)
import <- function(i) {commandsRun(paste0('wikipathways import-as-network id=', i))
}
lapply(scz_pathways.ids,import)
#Opening all the pathways previously selected consecutively - probably not so great if there are a lot of pathways
#Order is determined by the WP query, in which results are listed according to match scores
adc_pathways <- findPathwaysByText("Addiction")
adc_pathways[,"name"]
adc_pathways.ids <- adc_pathways$id
lapply(adc_pathways.ids,import)
getNetworkName()
adc_pathways
adc_pathways.names <- adc_pathways$name
scz_pathways.names <- scz_pathways$name
?data.frame
scz_pathways.names
intersect_df <- rbind(scz_pathways.names,adc_pathways.names)
View(intersect_df)
intersect_df <- cbind(scz_pathways.names,adc_pathways.names)
intersect_matrix <- matrix(nrow=length(scz_pathways.names), ncol=length(adc_pathways.names))
intersect_matrix <- matrix(nrow=length(scz_pathways.names), ncol=length(adc_pathways.names))
for (x in 1:length(scz_pathways.names)) {
for (y in 1:length(adc_pathways.names)) {
intersect_matrix[scz_pathways.names, adc_pathways.names] <- paste(scz_pathways.names[x], adc_pathways.names[y], sep = "-")
}
}
print(intersect_matrix)
for (x in 1:length(scz_pathways.names)) {
for (y in 1:length(adc_pathways.names)) {
intersect_matrix[scz_pathways.names, adc_pathways.names] <- paste(scz_pathways.names[x], adc_pathways.names[y], sep = "-")
}
}
?expand.grid
combination <- expand.grid(scz_pathways.names, adc_pathways.names)
View(combination)
intersect_matrix <- expand.grid(scz_pathways.names, adc_pathways.names)
intersection <- mergeNetworks(c("NRXN1 deletion syndrome - Homo sapiens","Opiod receptor pathways - Homo sapiens"), "Merged network test", intersection)
intersection <- mergeNetworks(c("NRXN1 deletion syndrome - Homo sapiens","Opiod receptor pathways - Homo sapiens"), "Merged network test", operation = "intersection")
intersection <- mergeNetworks(c("NRXN1 deletion syndrome - Homo sapiens","Opiod receptor pathways - Homo sapiens"), "Merged network test", operation = "intersection")
intersection <- mergeNetworks(c("NRXN1 deletion syndrome - Homo sapiens","Opiod receptor pathways - Homo sapiens"), "Merged network test", operation = "intersection")
intersection <- mergeNetworks(c("NRXN1 deletion syndrome - Homo sapiens","Opioid receptor pathways - Homo sapiens"), "Merged network test", operation = "intersection")
intersection <- mergeNetworks(c("col1","col2"), "test", operation = "intersection")
intersect_matrix[,1]
View(intersect_matrix)
col2 <- i[,2]
merge.intersect <- function(i) {
col1 <- i[,1]
col2 <- i[,2]
intersection <- mergeNetworks(c("col1","col2"), "test", operation = "intersection")
}
#Selecting the WP IDs of the relevant pathways (all in this case)
import <- function(i) {commandsRun(paste0('wikipathways import-as-network id=', i))
}
merge.intersect <- function(j) {
col1 <- j[,1]
col2 <- j[,2]
intersection <- mergeNetworks(c("col1","col2"), "test", operation = "intersection")
}
intersections <- merge.intersect(intersect_matrix)
intersect_matrix[,1]
?mergeNetworks
sessionInfo()
merge.intersect <- function(j) {
row1 <- j[1,]
row2 <- j[2,]
intersection <- mergeNetworks(c("col1","col2"), "test", operation = "intersection")
}
intersections <- merge.intersect(intersect_matrix)
intersection <- mergeNetworks(c("row1","row2"), "test", operation = "intersection")
merge.intersect <- function(j) {
row1 <- j[1,]
row2 <- j[2,]
intersection <- mergeNetworks(c("row1","row2"), "test", operation = "intersection")
}
intersections <- merge.intersect(intersect_matrix)
merge.intersect <- function(j) {
col1 <- j[,1]
col2 <- j[,2]
intersection <- mergeNetworks(c("col1","col2"), "test", operation = "intersection")
}
deleteAllNetworks
deleteAllNetworks()
?findPathwaysByText
scz_pathways <- findPathwaysByText("Schizophrenia")
scz_pathways <- scz_pathways %>%
dplyr::filter(species == c("Homo sapies", "Mus musculus", "Rattus norvegicus"))
library(dplyr)
scz_pathways <- scz_pathways %>%
dplyr::filter(species == c("Homo sapies", "Mus musculus", "Rattus norvegicus"))
#Querying WikiPathways for relevant pathways using "Schizophrenia" as keyword
scz_pathways[,"name"]
scz_pathways <- scz_pathways %>%
dplyr::filter(species == c("Homo sapiens", "Mus musculus", "Rattus norvegicus"))
#Querying WikiPathways for relevant pathways using "Schizophrenia" as keyword
scz_pathways[,"name"]
scz_pathways <- findPathwaysByText("Schizophrenia")
scz_pathways <- scz_pathways %>%
dplyr::filter(species == c("Homo sapiens", "Mus musculus", "Rattus norvegicus"))
scz_pathways <- scz_pathways %>%
dplyr::filter(species == c("Homo sapiens", "Rattus norvegicus"))
scz_pathways <- scz_pathways %>%
dplyr::filter(species == "Homo sapiens", "Rattus norvegicus")
scz_pathways <- scz_pathways %>%
dplyr::filter(species == "Homo sapiens"& "Rattus norvegicus")
scz_pathways <- scz_pathways %>%
dplyr::filter(species == c("Homo sapiens"& "Rattus norvegicus"))
scz_pathways <- scz_pathways %>%
dplyr::filter(species == c("Homo sapiens", "Rattus norvegicus"))
#Querying WikiPathways for relevant pathways using "Schizophrenia" as keyword
scz_pathways[,"name"]
scz_pathways <- findPathwaysByText("Schizophrenia")
scz_pathways <- scz_pathways %>%
dplyr::filter(species == c("Homo sapiens", "Rattus norvegicus"))
#Querying WikiPathways for relevant pathways using "Schizophrenia" as keyword
scz_pathways[,"name"]
scz_pathways <- findPathwaysByText("Schizophrenia")
scz_pathways
scz_pathways <- scz_pathways %>%
dplyr::filter(species == c("Homo sapiens", "Rattus norvegicus", "Mus musculus"))
scz_pathways <- findPathwaysByText("Schizophrenia")
scz_pathways <- scz_pathways %>%
dplyr::filter(species == c("Homo sapiens", "Rattus norvegicus", "Mus musculus"))
scz_pathways <- findPathwaysByText("Schizophrenia")
scz_pathways <- scz_pathways %>%
dplyr::filter(species == c("Homo sapiens", "Rattus norvegicus"))
#Querying WikiPathways for relevant pathways using "Schizophrenia" as keyword
scz_pathways[,"name"]
scz_pathways
scz_pathways <- findPathwaysByText("Schizophrenia")
scz_pathways <- scz_pathways %>%
dplyr::filter(species == c("Homo sapiens"))
#Querying WikiPathways for relevant pathways using "Schizophrenia" as keyword
scz_pathways[,"name"]
scz_pathways <- scz_pathways %>%
dplyr::filter(species == c("Homo sapiens" & "Rattus norvegicus"))
scz_pathways <- scz_pathways %>%
dplyr::filter(species == c("Homo sapiens","Rattus norvegicus"))
scz_pathways <- findPathwaysByText("Schizophrenia")
scz_pathways <- scz_pathways %>%
dplyr::filter(species == c("Homo sapiens","Rattus norvegicus"))
#Querying WikiPathways for relevant pathways using "Schizophrenia" as keyword
scz_pathways[,"name"]
scz_pathways
scz_pathways <- findPathwaysByText("Schizophrenia")
scz_pathways <- scz_pathways %>%
dplyr::filter(species == c("Homo sapiens","Rattus norvegicus"))
#Querying WikiPathways for relevant pathways using "Schizophrenia" as keyword
scz_pathways[,"name"]
adc_pathways <- findPathwaysByText("Addiction")
adc_pathways <- adc_pathways %>%
dplyr::filter(species == c("Homo sapiens", "Rattus norvegicus", "Mus musculus"))
adc_pathways
scz_pathways <- findPathwaysByText("Schizophrenia")
scz_pathways <- scz_pathways %>%
dplyr::filter(species == c("Homo sapiens","Rattus norvegicus","Mus musculus"))
scz_pathways <- findPathwaysByText("Schizophrenia")
#Querying WikiPathways for relevant pathways using "Schizophrenia" as keyword
scz_pathways <- scz_pathways %>%
dplyr::filter(species == c("Homo sapiens","Rattus norvegicus","Mus musculus"))
adc_pathways <- findPathwaysByText("Addiction")
adc_pathways <- adc_pathways %>%
dplyr::filter(species == c("Homo sapiens", "Rattus norvegicus", "Mus musculus"))
